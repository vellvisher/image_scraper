import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author v
 */
class ClientGUI extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6211467789591065259L;
	/**
	 * Creates new form Client
	 */
	public ClientGUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        urlLabel = new javax.swing.JLabel();
        url = new javax.swing.JTextField();
        saveFolderButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        statusLabel.setVisible(false);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        urlLabel.setText("URL :");

        url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlActionPerformed(evt);
            }
        });

        saveFolderButton.setText("Save to...");
        saveFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFolderButtonActionPerformed(evt);
            }
        });

        statusLabel.setText("Downloading images...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(urlLabel)
        			.addGap(21)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(saveFolderButton)
        				.addComponent(url, GroupLayout.PREFERRED_SIZE, 127, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        		.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        			.addContainerGap(50, Short.MAX_VALUE)
        			.addComponent(statusLabel)
        			.addGap(26))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(urlLabel)
        				.addComponent(url, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(saveFolderButton)
        			.addGap(18)
        			.addComponent(statusLabel)
        			.addContainerGap(50, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void urlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_urlActionPerformed

	/**
	 * @param evt
	 */
	/**
	 * @param evt
	 */
	private void saveFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFolderButtonActionPerformed
		JFileChooser fc = new JFileChooser();
		fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		fc.showOpenDialog(this);
		final File chosenFolder = fc.getSelectedFile();
		saveFolderButton.setEnabled(false);
		//statusLabel.setText(String.format("Uploading %d files...", chosenFiles.length));
		statusLabel.setVisible(true);
		
		SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {

			@Override
			protected Void doInBackground() throws Exception {
				new Client(url.getText(), chosenFolder).processWebPage();
				return null;
			}
			
			@Override
			protected void done() {
				saveFolderButton.setEnabled(true);
				statusLabel.setText("Dowload done...");
			}
		};
		worker.execute();
	}//GEN-LAST:event_saveFolderButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new ClientGUI().setVisible(true);
			}
		});
	}
    private javax.swing.JButton saveFolderButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField url;
    private javax.swing.JLabel urlLabel;
    // End of variables declaration//GEN-END:variables
}
